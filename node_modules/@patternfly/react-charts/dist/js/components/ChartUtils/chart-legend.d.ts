import { ChartLegendProps } from '../ChartLegend';
import { ChartThemeDefinition } from '../ChartTheme';
interface ChartLegendPaddingXInterface {
    chartWidth: number;
    dx?: number;
    legendData: any[];
    legendOrientation: 'horizontal' | 'vertical';
    legendPosition: 'bottom' | 'bottom-left' | 'right';
    legendProps: any;
    svgWidth: number;
    theme: ChartThemeDefinition;
}
interface ChartLegendPaddingYInterface {
    chartHeight: number;
    chartType: string;
    dy?: number;
    legendData: any[];
    legendOrientation: 'horizontal' | 'vertical';
    legendPosition: 'bottom' | 'bottom-left' | 'right';
    legendProps: any;
    theme: ChartThemeDefinition;
}
interface ChartLegendDimensionsInterface {
    legendData: any[];
    legendOrientation: 'horizontal' | 'vertical';
    legendProps: ChartLegendProps;
    theme: ChartThemeDefinition;
}
export declare const getLegendDimensions: ({ legendData, legendOrientation, legendProps, theme }: ChartLegendDimensionsInterface) => any;
export declare const getLegendX: ({ chartWidth, dx, legendData, legendOrientation, legendPosition, legendProps, svgWidth, theme }: ChartLegendPaddingXInterface) => number;
export declare const getLegendY: ({ chartHeight, dy, legendPosition, chartType, legendData, legendOrientation, legendProps, theme }: ChartLegendPaddingYInterface) => number;
export {};
