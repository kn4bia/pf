"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ChartDonut = exports.ChartDonutSubTitlePosition = exports.ChartDonutSortOrder = exports.ChartDonutLabelPosition = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var React = _interopRequireWildcard(require("react"));

var _hoistNonReactStatics = _interopRequireDefault(require("hoist-non-react-statics"));

var _victory = require("victory");

var _chartTheme = require("../ChartUtils/chart-theme");

var _ChartContainer = require("../ChartContainer");

var _ChartLabel = require("../ChartLabel");

var _ChartPie = require("../ChartPie");

var _ChartTheme = require("../ChartTheme");

var _ChartUtils = require("../ChartUtils");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var ChartDonutLabelPosition;
exports.ChartDonutLabelPosition = ChartDonutLabelPosition;

(function (ChartDonutLabelPosition) {
  ChartDonutLabelPosition["centroid"] = "centroid";
  ChartDonutLabelPosition["endAngle"] = "endAngle";
  ChartDonutLabelPosition["startAngle"] = "startAngle";
})(ChartDonutLabelPosition || (exports.ChartDonutLabelPosition = ChartDonutLabelPosition = {}));

;
var ChartDonutSortOrder;
exports.ChartDonutSortOrder = ChartDonutSortOrder;

(function (ChartDonutSortOrder) {
  ChartDonutSortOrder["ascending"] = "ascending";
  ChartDonutSortOrder["descending"] = "descending";
})(ChartDonutSortOrder || (exports.ChartDonutSortOrder = ChartDonutSortOrder = {}));

;
var ChartDonutSubTitlePosition;
/**
 * See https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/victory/index.d.ts
 */

exports.ChartDonutSubTitlePosition = ChartDonutSubTitlePosition;

(function (ChartDonutSubTitlePosition) {
  ChartDonutSubTitlePosition["bottom"] = "bottom";
  ChartDonutSubTitlePosition["center"] = "center";
  ChartDonutSubTitlePosition["right"] = "right";
})(ChartDonutSubTitlePosition || (exports.ChartDonutSubTitlePosition = ChartDonutSubTitlePosition = {}));

var ChartDonut = function ChartDonut(_ref) {
  var ariaDesc = _ref.ariaDesc,
      ariaTitle = _ref.ariaTitle,
      _ref$donutDx = _ref.donutDx,
      donutDx = _ref$donutDx === void 0 ? 0 : _ref$donutDx,
      _ref$donutDy = _ref.donutDy,
      donutDy = _ref$donutDy === void 0 ? 0 : _ref$donutDy,
      _ref$legendPosition = _ref.legendPosition,
      legendPosition = _ref$legendPosition === void 0 ? _ChartTheme.ChartCommonStyles.legend.position : _ref$legendPosition,
      _ref$standalone = _ref.standalone,
      standalone = _ref$standalone === void 0 ? true : _ref$standalone,
      subTitle = _ref.subTitle,
      _ref$subTitleComponen = _ref.subTitleComponent,
      subTitleComponent = _ref$subTitleComponen === void 0 ? React.createElement(_ChartLabel.ChartLabel, null) : _ref$subTitleComponen,
      _ref$subTitleDx = _ref.subTitleDx,
      subTitleDx = _ref$subTitleDx === void 0 ? 0 : _ref$subTitleDx,
      _ref$subTitleDy = _ref.subTitleDy,
      subTitleDy = _ref$subTitleDy === void 0 ? 0 : _ref$subTitleDy,
      _ref$subTitlePosition = _ref.subTitlePosition,
      subTitlePosition = _ref$subTitlePosition === void 0 ? _ChartTheme.ChartDonutStyles.label.subTitlePosition : _ref$subTitlePosition,
      themeColor = _ref.themeColor,
      themeVariant = _ref.themeVariant,
      title = _ref.title,
      _ref$titleComponent = _ref.titleComponent,
      titleComponent = _ref$titleComponent === void 0 ? React.createElement(_ChartLabel.ChartLabel, null) : _ref$titleComponent,
      _ref$theme = _ref.theme,
      theme = _ref$theme === void 0 ? (0, _chartTheme.getDonutTheme)(themeColor, themeVariant) : _ref$theme,
      _ref$capHeight = _ref.capHeight,
      capHeight = _ref$capHeight === void 0 ? 1.1 : _ref$capHeight,
      _ref$height = _ref.height,
      height = _ref$height === void 0 ? theme.pie.height : _ref$height,
      _ref$width = _ref.width,
      width = _ref$width === void 0 ? theme.pie.width : _ref$width,
      _ref$donutHeight = _ref.donutHeight,
      donutHeight = _ref$donutHeight === void 0 ? Math.min(height, width) : _ref$donutHeight,
      _ref$donutWidth = _ref.donutWidth,
      donutWidth = _ref$donutWidth === void 0 ? Math.min(height, width) : _ref$donutWidth,
      _ref$innerRadius = _ref.innerRadius,
      innerRadius = _ref$innerRadius === void 0 ? (Math.min(donutHeight, donutWidth) - 34) / 2 : _ref$innerRadius,
      rest = _objectWithoutProperties(_ref, ["ariaDesc", "ariaTitle", "donutDx", "donutDy", "legendPosition", "standalone", "subTitle", "subTitleComponent", "subTitleDx", "subTitleDy", "subTitlePosition", "themeColor", "themeVariant", "title", "titleComponent", "theme", "capHeight", "height", "width", "donutHeight", "donutWidth", "innerRadius"]);

  var donutSize = Math.min(donutHeight, donutWidth); // Returns subtitle

  var getSubTitle = function getSubTitle() {
    if (!subTitle || subTitlePosition === ChartDonutSubTitlePosition.center) {
      return null;
    }

    var subTitleProps = subTitleComponent.props ? subTitleComponent.props : {};
    return React.cloneElement(subTitleComponent, _objectSpread({
      style: _ChartTheme.ChartDonutStyles.label.subTitle,
      text: subTitle,
      textAnchor: subTitlePosition === 'right' ? 'start' : 'middle',
      verticalAnchor: 'middle',
      x: (0, _ChartUtils.getLabelX)({
        chartWidth: donutSize,
        dx: subTitleDx,
        labelPosition: subTitlePosition,
        legendPosition: legendPosition,
        svgWidth: width
      }),
      y: (0, _ChartUtils.getLabelY)({
        chartHeight: donutSize,
        dy: subTitleDy,
        labelPosition: subTitlePosition
      })
    }, subTitleProps));
  }; // Returns title


  var getTitle = function getTitle() {
    if (!title) {
      return null;
    }

    var titleProps = titleComponent ? titleComponent.props : {};
    var showBoth = title && subTitle && subTitlePosition == ChartDonutSubTitlePosition.center;
    return React.cloneElement(titleComponent, _objectSpread({}, showBoth && {
      capHeight: capHeight
    }, {
      style: [_ChartTheme.ChartDonutStyles.label.title, _ChartTheme.ChartDonutStyles.label.subTitle],
      text: showBoth ? [title, subTitle] : title,
      textAnchor: 'middle',
      verticalAnchor: 'middle',
      x: (0, _ChartUtils.getLabelX)({
        chartWidth: donutSize,
        dx: donutDx,
        labelPosition: 'center',
        legendPosition: legendPosition,
        svgWidth: width
      }),
      y: (0, _ChartUtils.getLabelY)({
        chartHeight: donutSize,
        dy: donutDy,
        labelPosition: 'center'
      })
    }, titleProps));
  };

  var chart = React.createElement(_ChartPie.ChartPie, _extends({
    height: height,
    innerRadius: innerRadius > 0 ? innerRadius : 0,
    legendPosition: legendPosition,
    pieDx: donutDx,
    pieDy: donutDy,
    pieHeight: donutSize,
    pieWidth: donutSize,
    standalone: false,
    theme: theme,
    width: width
  }, rest));
  return standalone ? React.createElement(_ChartContainer.ChartContainer, {
    desc: ariaDesc,
    height: height,
    title: ariaTitle,
    width: width
  }, chart, getTitle(), getSubTitle()) : React.createElement(React.Fragment, null, chart, getTitle(), getSubTitle());
}; // Note: VictoryPie.role must be hoisted


exports.ChartDonut = ChartDonut;
ChartDonut.propTypes = {
  ' ': _propTypes["default"].any,
  animate: _propTypes["default"].any,
  ariaDesc: _propTypes["default"].string,
  ariaTitle: _propTypes["default"].string,
  capHeight: _propTypes["default"].any,
  categories: _propTypes["default"].any,
  colorScale: _propTypes["default"].any,
  containerComponent: _propTypes["default"].element,
  cornerRadius: _propTypes["default"].number,
  data: _propTypes["default"].arrayOf(_propTypes["default"].any),
  dataComponent: _propTypes["default"].element,
  donutHeight: _propTypes["default"].number,
  donutDx: _propTypes["default"].number,
  donutDy: _propTypes["default"].number,
  donutWidth: _propTypes["default"].number,
  endAngle: _propTypes["default"].number,
  eventKey: _propTypes["default"].any,
  events: _propTypes["default"].arrayOf(_propTypes["default"].any),
  externalEventMutations: _propTypes["default"].arrayOf(_propTypes["default"].any),
  groupComponent: _propTypes["default"].element,
  height: _propTypes["default"].number,
  innerRadius: _propTypes["default"].number,
  labelComponent: _propTypes["default"].element,
  labelPosition: _propTypes["default"].oneOf(['startAngle', 'endAngle', 'centroid']),
  labelRadius: _propTypes["default"].number
};
(0, _hoistNonReactStatics["default"])(ChartDonut, _victory.VictoryPie);
//# sourceMappingURL=ChartDonut.js.map