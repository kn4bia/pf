import _pt from "prop-types";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import * as React from 'react';
import hoistNonReactStatics from 'hoist-non-react-statics';
import { VictoryVoronoiContainer } from 'victory';
import { ChartTooltip } from '../ChartTooltip';
import { getTheme } from '../ChartUtils';
export let ChartVoronoiDimension;

(function (ChartVoronoiDimension) {
  ChartVoronoiDimension["x"] = "x";
  ChartVoronoiDimension["y"] = "y";
})(ChartVoronoiDimension || (ChartVoronoiDimension = {}));

;
/**
 * See https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/victory/index.d.ts
 */

export const ChartVoronoiContainer = (_ref) => {
  let {
    themeColor,
    themeVariant,
    // destructure last
    theme = getTheme(themeColor, themeVariant),
    labelComponent = React.createElement(ChartTooltip, {
      theme: theme
    })
  } = _ref,
      rest = _objectWithoutProperties(_ref, ["themeColor", "themeVariant", "theme", "labelComponent"]);

  // Note: theme is required by voronoiContainerMixin, but VictoryVoronoiContainer is missing a prop type
  // @ts-ignore
  return React.createElement(VictoryVoronoiContainer, _extends({
    labelComponent: labelComponent,
    theme: theme
  }, rest));
};
ChartVoronoiContainer.propTypes = {
  ' ': _pt.any,
  activateData: _pt.bool,
  activateLabels: _pt.bool,
  disable: _pt.bool,
  labels: _pt.func,
  labelComponent: _pt.element,
  onActivated: _pt.func,
  onDeactivated: _pt.func,
  radius: _pt.number,
  theme: _pt.any,
  themeColor: _pt.string,
  themeVariant: _pt.string,
  voronoiBlacklist: _pt.arrayOf(_pt.string),
  voronoiDimension: _pt.oneOf(["x", "y"]),
  voronoiPadding: _pt.number
};
ChartVoronoiContainer.defaultProps = VictoryVoronoiContainer.defaultProps; // Note: VictoryVoronoiContainer.defaultEvents & VictoryContainer.role must be hoisted

hoistNonReactStatics(ChartVoronoiContainer, VictoryVoronoiContainer);
//# sourceMappingURL=ChartVoronoiContainer.js.map